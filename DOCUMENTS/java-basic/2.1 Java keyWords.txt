Java KeyWords 
===========================
(a).Keyword for Data types 
------------------------
 a.byte
 b.short
 c.int
 d.long
 e.float
 f.double
 g.char
 h.boolean
 
(b).Keyword for Flow Control
---------------------------
 [a].if else
 [b].switch case default
 [c].for, while, do while, break, continue, return
 
(c).Keyword for Modifier
-----------------------------
 a.public 
   1.we can use public with top level class,interface,enum,abstract class,method ,class level & instance level variable ,constructor
 b.private
   1.we can use private with inner class,inner interface,inner enum,inner abstract class,method ,class level & instance level variable,constructor
 c.protected
	1.we can use protected with inner class,inner interface,inner enum,inner abstract class,method ,class level & instance level variable,constructor
 d.final
	1.we can use final with top level & inner class ,method ,class level & instance level & local level variable.
 e.abstract
   1.we can use abstract with top level & inner class,top level & inner interface,method 
 f.static
   1.we can use static with inner class,inner interface,inner enum,inner abstract class,method ,class level variable,blocks
   2.we can use the static with import statement also 
     ex static import java.
 g.synchronized
   1.we can use synchronized ,method and blocks
 h.volatile
   1.we can use volatile with variable only. class level and instance level only not local variable is volatile.
 i.transient
   1.we can use transient with variable only .class level and instance level only not local variable is volatile.
 j.strictfp
     1.we can use strictfp with class and methods not witht the variable.
 k.native
    1.we can use native only for method
	  ex: [public|protected|private] synchronized final static native void methodName();
	  
(d).Keyword for Exception Handling 
--------------------------------------
 a.try
   only for blocks 
 b.catch
  only for blocks 
 c.finally
   only for blocks 
 d.throws
   only for methods
 e.throw
   only for exception or throwable objects.
 f.assert
   its for assertion to enable assertion we need to pass vm para like this -ea
   example: 
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        System.out.print("Enter Number ");
        int value = scanner.nextInt();
        assert value != 0 :" Not valid";
        System.out.println("value is "+value);
    }

(e).Keyword for Class
-----------------------------------------
 a.class
   1.for top level inner class & method local inner class but not for annonimus class
 b.interface
   1.for top level interface inner interface only 
 c.extends
   1.for top level class ,for inner class ,for method local inner class ,for top level interface ,for inner interface and in genrics only
 d.implements
   1.for top level class ,for inner class ,for methods local inner class ,for enum 
 e.imports
   1.in every java file for importing the dependent package ,interfaces & classes & enums .
 f.package
   1.for defining package for top level java class ,top level interface and top level enum 
 
(f).Keyword for Object
------------------------------------------
 a.super 
   super is used for pointing to parent class instance 
  1.for referring parent method 
  2.for referring parent constructor
  3.for referring parent class variable
  4.for generic programming.
 b.this.
	this is used for pointing to current class instance  
  1.for referring current class method
  2.for referring current class constructor
  3.for referring current class variable
 c.new 
  is used for creating new object it will invoke the constructor
 d.instanceof
  this is the special operator in Java which is used for comparison of two instance
  if both instance are not from same class then it will throw ClassCastException
 
(g).Keyword for Method Return type
-------------------------------------------
 void :for method return type only
 
(h).Unused Keywords
---------------------------------------
 a.goto 
 b.const
 
(i).Keyword for Enum
--------------------------------------
 enum is used for declaring enum data type
 
 (j)Reserve Literal
 ----------------------------------------------
 true,false for boolean datatype
 null default value of reference variable.